[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "groundinggpt"
version = "0.0.0"
description = "Packaging shim for GroundingGPT (ACL 2024) â€” code by Zhaowei Li et al."
requires-python = ">=3.9"
readme = "README.md"
license = { text = "MIT" }
authors = [
  { name = "Zhaowei Li et al. (original authors)" },
  { name = "Anna Deichler (packaging)" }
]

dependencies = [
  "ninja",
  "peft",
  "accelerate==0.31.0",
  "deepspeed",
  "prettytable",
  "fastapi",
  "torch @ https://download.pytorch.org/whl/cu124/torch-2.6.0%2Bcu124-cp310-cp310-linux_x86_64.whl",
  "torchvision @ https://download.pytorch.org/whl/cu124/torchvision-0.21.0%2Bcu124-cp310-cp310-linux_x86_64.whl",
  "torchaudio @ https://download.pytorch.org/whl/cu124/torchaudio-2.6.0%2Bcu124-cp310-cp310-linux_x86_64.whl",
  "transformers==4.34.0",
  "tokenizers==0.14.1",
  "huggingface_hub>=0.17,<0.20",
  "numpy",
  "pillow",
  "httpx==0.23.0",
  "scikit-image",
  "timm",
  "iopath",
  "omegaconf",
  "decord",
  "einops",
  "ftfy",
  "pytorchvideo @ git+https://github.com/facebookresearch/pytorchvideo@6cdc929",
  "opencv-python",
  "pycocotools",
  "matplotlib",
  "pandas",
  "webdataset",
  ]

[project.optional-dependencies]
vision = [
  "torchvision",
  "timm",
  "scikit-image",
  "pytorchvideo",
  "iopath",
]
serve = [
  "fastapi",
  "uvicorn",
  "gradio==3.23",
  "markdown2[all]",
]
train = [
  "accelerate==0.31.0",
  "deepspeed",
  "peft",
  "wandb",
  "sentencepiece",
]
io = [
  "requests",
  "httpx==0.23.0",
  "shortuuid",
]
data = [
  "decord",
  "pycocotools",
  "librosa",
  "ftfy",
  "prettytable",
  "ninja",
]
cuda = [
  "bitsandbytes==0.41.0; platform_system == 'Linux' and platform_machine == 'x86_64'",
  "flash-attn; platform_system == 'Linux' and platform_machine == 'x86_64'",
]

all = [
  "torchvision", "timm", "scikit-image", "pytorchvideo", "iopath",
  "fastapi", "uvicorn", "gradio==3.23", "markdown2[all]",
  "accelerate", "deepspeed", "peft", "wandb", "sentencepiece",
  "requests", "httpx==0.23.0", "shortuuid",
  "decord", "pycocotools", "librosa", "ftfy", "prettytable", "ninja",
  "bitsandbytes==0.41.0; platform_system == 'Linux' and platform_machine == 'x86_64'"]

[tool.setuptools]
include-package-data = true
package-dir = {"" = "."}

[tool.setuptools.packages.find]
where = ["."]
include = ["lego*", "video_llama*"] 

[tool.setuptools.package-data]
"lego" = ["**/*.json","**/*.yaml","**/*.yml","**/*.txt","**/*.pt","**/*.bin"]
"video_llama" = ["**/*.json","**/*.yaml","**/*.yml","**/*.txt"]
